
#include <cassert>
#include <filesystem>
#include <map>
#include <string>

std::vector<std::string> mime_extensions{
	"stl",
	"step",
	"stp",
	"dwg",
	"ez",
	"ccad",
	"drw",
	"tsp",
	"dxf",
	"xls",
	"unv",
	"jar",
	"hqx",
	"cpt",
	"pot",
	"pps",
	"ppt",
	"ppz",
	"doc",
	"bin",
	"class",
	"dms",
	"exe",
	"lha",
	"lzh",
	"oda",
	"ogg",
	"ogm",
	"pdf",
	"pgp",
	"ai",
	"eps",
	"ps",
	"prt",
	"rtf",
	"set",
	"smi",
	"smil",
	"sol",
	"vda",
	"mif",
	"xlc",
	"xll",
	"xlm",
	"xls",
	"xlw",
	"cod",
	"arj",
	"bcpio",
	"vcd",
	"pgn",
	"cpio",
	"csh",
	"deb",
	"dcr",
	"dir",
	"dxr",
	"dvi",
	"pre",
	"spl",
	"gtar",
	"gz",
	"gz",
	"hdf",
	"ipx",
	"ips",
	"js",
	"skd",
	"skm",
	"skp",
	"skt",
	"latex",
	"lsp",
	"scm",
	"mif",
	"bat",
	"com",
	"exe",
	"cdf",
	"nc",
	"pl",
	"pm",
	"rar",
	"sh",
	"shar",
	"swf",
	"sit",
	"sv4cpio",
	"sv4crc",
	"tar.gz",
	"tgz",
	"tar",
	"tcl",
	"tex",
	"texi",
	"texinfo",
	"man",
	"me",
	"ms",
	"roff",
	"t",
	"tr",
	"ustar",
	"src",
	"zip",
	"zip",
	"tsi",
	"au",
	"snd",
	"kar",
	"mid",
	"midi",
	"mp2",
	"mp3",
	"mpga",
	"au",
	"aif",
	"aifc",
	"aiff",
	"m3u",
	"wax",
	"wma",
	"rpm",
	"ram",
	"rm",
	"ra",
	"wav",
	"pdb",
	"xyz",
	"ras",
	"gif",
	"ief",
	"jpe",
	"jpeg",
	"jpg",
	"png",
	"tif tiff",
	"tif",
	"tiff",
	"ras",
	"pnm",
	"pbm",
	"pgm",
	"ppm",
	"rgb",
	"xbm",
	"xpm",
	"xwd",
	"iges",
	"igs",
	"mesh",
	"msh",
	"silo",
	"vrml",
	"wrl",
	"css",
	"htm",
	"html htm",
	"html",
	"asc txt",
	"asc",
	"c",
	"cc",
	"f90",
	"f",
	"h",
	"hh",
	"m",
	"txt",
	"rtx",
	"rtf",
	"sgm",
	"sgml",
	"tsv",
	"jad",
	"etx",
	"xml",
	"dl",
	"fli",
	"flv",
	"gl",
	"mp2",
	"mp4",
	"mpe",
	"mpeg",
	"mpg",
	"mov",
	"qt",
	"viv",
	"vivo",
	"fli",
	"asf",
	"asx",
	"wmv",
	"wmx",
	"wvx",
	"avi",
	"movie",
	"mime",
	"ice",
	"vrm",
	"vrml" };

std::vector<std::string> mime_types = {
	"application/SLA",
	"application/STEP",
	"application/STEP",
	"application/acad",
	"application/andrew-inset",
	"application/clariscad",
	"application/drafting",
	"application/dsptype",
	"application/dxf",
	"application/excel",
	"application/i-deas",
	"application/java-archive",
	"application/mac-binhex40",
	"application/mac-compactpro",
	"application/vnd.ms-powerpoint",
	"application/vnd.ms-powerpoint",
	"application/vnd.ms-powerpoint",
	"application/vnd.ms-powerpoint",
	"application/msword",
	"application/octet-stream",
	"application/octet-stream",
	"application/octet-stream",
	"application/octet-stream",
	"application/octet-stream",
	"application/octet-stream",
	"application/oda",
	"application/ogg",
	"application/ogg",
	"application/pdf",
	"application/pgp",
	"application/postscript",
	"application/postscript",
	"application/postscript",
	"application/pro_eng",
	"application/rtf",
	"application/set",
	"application/smil",
	"application/smil",
	"application/solids",
	"application/vda",
	"application/vnd.mif",
	"application/vnd.ms-excel",
	"application/vnd.ms-excel",
	"application/vnd.ms-excel",
	"application/vnd.ms-excel",
	"application/vnd.ms-excel",
	"application/vnd.rim.cod",
	"application/x-arj-compressed",
	"application/x-bcpio",
	"application/x-cdlink",
	"application/x-chess-pgn",
	"application/x-cpio",
	"application/x-csh",
	"application/x-debian-package",
	"application/x-director",
	"application/x-director",
	"application/x-director",
	"application/x-dvi",
	"application/x-freelance",
	"application/x-futuresplash",
	"application/x-gtar",
	"application/x-gunzip",
	"application/x-gzip",
	"application/x-hdf",
	"application/x-ipix",
	"application/x-ipscript",
	"application/x-javascript",
	"application/x-koan",
	"application/x-koan",
	"application/x-koan",
	"application/x-koan",
	"application/x-latex",
	"application/x-lisp",
	"application/x-lotusscreencam",
	"application/x-mif",
	"application/x-msdos-program",
	"application/x-msdos-program",
	"application/x-msdos-program",
	"application/x-netcdf",
	"application/x-netcdf",
	"application/x-perl",
	"application/x-perl",
	"application/x-rar-compressed",
	"application/x-sh",
	"application/x-shar",
	"application/x-shockwave-flash",
	"application/x-stuffit",
	"application/x-sv4cpio",
	"application/x-sv4crc",
	"application/x-tar-gz",
	"application/x-tar-gz",
	"application/x-tar",
	"application/x-tcl",
	"application/x-tex",
	"application/x-texinfo",
	"application/x-texinfo",
	"application/x-troff-man",
	"application/x-troff-me",
	"application/x-tross-ms",
	"application/x-troff",
	"application/x-troff",
	"application/x-troff",
	"application/x-ustar",
	"application/x-wais-source",
	"application/x-zip-compressed",
	"application/zip",
	"audio/TSP-audio",
	"audio/basic",
	"audio/basic",
	"audio/midi",
	"audio/midi",
	"audio/midi",
	"audio/mpeg",
	"audio/mpeg",
	"audio/mpeg",
	"audio/ulaw",
	"audio/x-aiff",
	"audio/x-aiff",
	"audio/x-aiff",
	"audio/x-mpegurl",
	"audio/x-ms-wax",
	"audio/x-ms-wma",
	"audio/x-pn-realaudio-plugin",
	"audio/x-pn-realaudio",
	"audio/x-pn-realaudio",
	"audio/x-realaudio",
	"audio/x-wav",
	"chemical/x-pdb",
	"chemical/x-pdb",
	"image/cmu-raster",
	"image/gif",
	"image/ief",
	"image/jpeg",
	"image/jpeg",
	"image/jpeg",
	"image/png",
	"image/tiff",
	"image/tiff",
	"image/tiff",
	"image/x-cmu-raster",
	"image/x-portable-anymap",
	"image/x-portable-bitmap",
	"image/x-portable-graymap",
	"image/x-portable-pixmap",
	"image/x-rgb",
	"image/x-xbitmap",
	"image/x-xpixmap",
	"image/x-xwindowdump",
	"model/iges",
	"model/iges",
	"model/mesh",
	"model/mesh",
	"model/mesh",
	"model/vrml",
	"model/vrml",
	"text/css",
	"text/html",
	"text/html",
	"text/html",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/plain",
	"text/richtext",
	"text/rtf",
	"text/sgml",
	"text/sgml",
	"text/tab-separated-values",
	"text/vnd.sun.j2me.app-descriptor",
	"text/x-setext",
	"text/xml",
	"video/dl",
	"video/fli",
	"video/flv",
	"video/gl",
	"video/mpeg",
	"video/mp4",
	"video/mpeg",
	"video/mpeg",
	"video/mpeg",
	"video/quicktime",
	"video/quicktime",
	"video/vnd.vivo",
	"video/vnd.vivo",
	"video/x-fli",
	"video/x-ms-asf",
	"video/x-ms-asx",
	"video/x-ms-wmv",
	"video/x-ms-wmx",
	"video/x-ms-wvx",
	"video/x-msvideo",
	"video/x-sgi-movie",
	"www/mime",
	"x-conference/x-cooltalk",
	"x-world/x-vrml",
	"x-world/x-vrml" };

std::map<std::string, std::string> makeMimeMap()
{
	std::map<std::string, std::string> mime_map;
	assert(mime_extensions.size() == mime_types.size());

	// TODO: there are duplicates in the list of extensions and mime-types. Consider
	//	comma-delimited value, or some way of returning both mime-types in a way
	//	that would be expected by applications
	for (size_t i = 0; i < mime_types.size(); i++) {
		auto &ext = mime_extensions[i];
		auto &mt = mime_types[i];
		mime_map[ext] = mt;
	}
	return mime_map;
}

std::map<std::string, std::string> mime_map = makeMimeMap();

bool get_mime_type(const char *filename, std::string &mimetype)
{
	std::string ret;
	mimetype = "text/plain";

	if (filename == nullptr) {
		return false;
	}
	std::filesystem::path tf(filename);
	if (tf.has_extension()) {
		auto extension = tf.extension().string();
		extension = extension.erase(0, 1);
		auto found = mime_map.find(extension);
		if (found == mime_map.end()) { // ext was not in the list
			return false;
		}
		mimetype = found->second;
		return true;
	}
	return false;
}
